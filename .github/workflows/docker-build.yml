name: Build, Increment Version, Push, and Deploy Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Maven (optional if Maven is not installed)
      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Increment the version in pom.xml
      - name: Increment Maven version
        run: mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F'.' '{print $1"."$2"."$3+1}')

      # Step 4: Commit the updated pom.xml
      - name: Commit updated version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add pom.xml
          git commit -m "Increment version to $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          git push origin master

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            shirbenyosef1/my-app-image:latest
            shirbenyosef1/my-app-image:$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

      # Step 8: Install SSH client
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      # Step 9: Add SSH private key
      - name: Add SSH private key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      # Step 10: SSH into EC2 instance and deploy the Docker image
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull the latest Docker image
            docker pull shirbenyosef1/my-app-image:latest
            
            # Run the new container
            docker run --rm shirbenyosef1/my-app-image:latest
          EOF
